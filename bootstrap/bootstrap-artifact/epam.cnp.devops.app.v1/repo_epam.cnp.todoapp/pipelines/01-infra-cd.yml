name: $(Build.SourceBranchName)-$(Build.BuildId)

resources:
  repositories:
  - repository: templates
    type: git
    name: #{project_devops_name}#/#{repo_devops_name}#
    endpoint: "tfs_cnpdevopsproject"
    ref: 'refs/heads/develop'

  - repository: tfvariables
    type: git
    name: #{repo_name}#
    endpoint: "tfs_cnpdevopsproject"
    ref: $(Build.SourceBranch)

parameters:
- name: destroy
  displayName: Destroy
  type: boolean
  default: false
- name: refreshOnly
  displayName: Refresh only
  type: boolean
  default: false
- name: ManualValidation
  displayName: Manual Validation
  type: boolean
  default: false
- name: terraformConfFileFormat
  displayName: Terraform Configuration File format
  type: string
  default: tfvars  
- name: terraformTarget
  displayName: Terraform targeting arguments (optional)
  type: string
  default: 'empty'

variables:
- group: opensource.com.env.shared
- group: opensource.com.sys.global

pool:
  #{agent_pool}#

trigger: none

stages:
- template: pipelines/infrastructure/terraform-deployment-pipeline.yml@templates
  parameters:
    infraSolutionFolder: iac/terraform/epam.alz.terraform/_solutions/cnp_app_v1
    configurationPath: pipelines/_configuration/
    envList:
      - opensource.dev.env.shared
      - opensource.prod.env.shared
    destroy: ${{ parameters.destroy }}
    terraformConfFileFormat: ${{ parameters.terraformConfFileFormat }}
    ManualValidation: ${{ parameters.ManualValidation }}
    terraformTarget: ${{ parameters.terraformTarget }}
    refreshOnly: ${{ parameters.refreshOnly }}